buildscript {
    ext{
        scalaVersion = '2.13.1'
        guavaVersion = '27.1-jre'
        jacksonVersion = '2.9.10'
        slf4jVersion = '1.7.28'
        bouncycastleVersion = '1.63'
        logbackVersion = '1.2.3'
    }
}

plugins{
    id 'java'
    id 'scala'
    id 'idea'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group 'joycai'
version '0.1.2'

repositories {
    mavenCentral()
    jcenter()
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    //scala support
    implementation group: "org.scala-lang", name: "scala-library", version: scalaVersion
    implementation group: "org.scala-lang", name: "scala-compiler", version: scalaVersion
    implementation group: "org.scala-lang", name: "scala-reflect", version: scalaVersion

    implementation group: 'com.google.guava', name: 'guava', version: guavaVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: bouncycastleVersion

    api group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    testImplementation "junit:junit:4.12"
}

task createDirs {
    sourceSets*.scala.srcDirs*.each { it.mkdirs() }
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task run(type: JavaExec, dependsOn: classes) {
    main = 'joycai.Main'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

task sourceJar(type: Jar) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}