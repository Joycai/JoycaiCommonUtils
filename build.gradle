plugins {
    id 'java-library'
    id 'scala'
    id 'idea'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
    id "org.scoverage" version "5.0.0"
}

ext {
    scalaVersion = '2.13.8'
    guavaVersion = '30.0-jre'
    jacksonVersion = '2.10.+'
    slf4jVersion = '1.7.30'
    commonslang3Version = '3.9'
    bouncycastleVersion = '1.69'
    logbackVersion = '1.2.9'
}

group 'joycai'
version '0.2.2'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectVersion", "0.2.2"
        property "sonar.projectKey", "Joycai_JoycaiCommonUtils"
        property "sonar.organization", "joycai"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.scala.scoverage.reportPath", ["build/reports/scoverage/scoverage.xml"]
    }
}

scoverage {
    coverageOutputXML.set(true)
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

repositories {
    jcenter()
    mavenCentral()
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    //scala support
    implementation group: "org.scala-lang", name: "scala-library", version: "${scalaVersion}"
    implementation group: "org.scala-lang", name: "scala-compiler", version: "${scalaVersion}"
    implementation group: "org.scala-lang", name: "scala-reflect", version: "${scalaVersion}"

    implementation group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: "${commonslang3Version}"

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15to18', version: "${bouncycastleVersion}"

    //
    implementation group: "javax.xml.bind", name: "jaxb-api", version: "2.3.0"
    implementation group: "com.sun.xml.bind", name: "jaxb-impl", version: "2.3.0"
    implementation group: "org.glassfish.jaxb", name: "jaxb-runtime", version: "2.3.0"
    implementation group: "javax.activation", name: "activation", version: "1.1.1"

    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
    testImplementation(platform('org.junit:junit-bom:5.7.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation 'org.mockito:mockito-core:4.6.1'
}

task createDirs {
    sourceSets*.scala.srcDirs*.each { it.mkdirs() }
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task run(type: JavaExec, dependsOn: classes) {
    main = 'joycai.Main'
    classpath sourceSets.main.runtimeClasspath
//    classpath configurations.runtime
}

task sourceJar(type: Jar) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}